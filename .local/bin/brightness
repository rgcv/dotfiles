#!/bin/sh
# requires:
#   brightnessctl (brightnessctl, screen brightness control)
set -e

app_name=bin.$(basename "$0")
lock_file=${XDG_RUNTIME_DIR-/tmp}/.$app_name.lock
nid_file=${XDG_RUNTIME_DIR-/tmp}/.$app_name.bin.nid
should_notify=false

true()  { return 0; }
false() { ! true;   }

usage() {
  echo "Usage: $app_name [-h] [--notify] [+|-]<val>[%]"
  exit "${1-0}"
}
notify() {
  notify-send.sh \
    --urgency normal \
    --expire-time 3000 \
    --app-name "$app_name" \
    --icon notification-display-brightness \
    --replace-file "$nid_file" \
    "$@"
}
check_avail() {
  if ! command -v "$1" >/dev/null; then
    echo >&2 "Missing dependency: $1"
    $should_notify && notify "Missing dependency: $1"
    false
  else
    true
  fi
}

min() { [ "$1" -lt "$2" ] && echo "$1" || echo "$2"; }
max() { [ "$1" -gt "$2" ] && echo "$1" || echo "$2"; }
clamp() { min "$(max "$1" "$2")" "$3"; }

get_brightness() {
  _val=$(brightnessctl -mc backlight | cut -d , -f 4)
  echo "${_val%\%}"
  unset _val
}
set_brightness() { brightnessctl -qc backlight s "$1%"; }


[ -f "$lock_file" ] && exit
touch "$lock_file" && trap 'rm -f "$lock_file"' EXIT HUP INT TERM

while [ -n "$1" ]; do
  case $1 in
    --notify) should_notify=true ;;
    -h) usage ;;
     *) break ;;
  esac
  shift
done

[ $# -gt 0 ] || usage 1
check_avail brightnessctl || exit 1

val=${1#[-+]}
val=${val%\%}
case $val in *[![:digit:]]*|"") usage 1 ;; esac

case $1 in
  -*) new=$(max $(($(get_brightness) - val))   0) ;;
  +*) new=$(min $(($(get_brightness) + val)) 100) ;;
   *) new=$(clamp "$val" 0 100) ;;
esac
set_brightness "$new"

$should_notify || exit 0

icon=notification-display-brightness
case $new in
  0)                urgency=low      icon=$icon-off    ;;
  [1-9]|[1-3][0-9]) urgency=low      icon=$icon-low    ;;
  [4-7][0-9])       urgency=normal   icon=$icon-medium ;;
  [8-9][0-9]|100)   urgency=critical icon=$icon-full   ;;
esac

notify \
  --icon $icon \
  --urgency $urgency \
  --hint "int:value:$new" \
  "Brightness: $new%"
