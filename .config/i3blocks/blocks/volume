#!/bin/sh
# requires:
#   amixer (alsa-utils, sound management)
# uses:
#   pactl   (libpulse, subscribe mode)
set -e

interval=${interval-}

mixer=default
amixer -qD pulse info >&- 2>&- && mixer=pulse

scontrol=$(amixer -D $mixer scontrols |
  sed -n "s/Simple mixer control '\([^']*\)',0/\1/p" | head -n 1)
capability=$(amixer -D $mixer get "$scontrol" |
  sed -n "s/ Capabilities:.*cvolume.*/Capture/p")


json() {
  printf '{"full_text":"%s", "short_text":"%s", "color":"%s"}\n' "$1" "$2" "$3"
}

display() {
  data=$(amixer -MD $mixer sget "$scontrol" | grep '[0-9]*%' | head -n 1)
  volume=$(echo "$data" | grep -o '[0-9]*%')
  volume=${volume%\%}
  muted=$(echo "$data" | grep -o '\[off\]' || true)

  color=${foreground-#ffffff}

  if [ -n "$muted" ]; then
    volume=0
    icon=${ICON_MUTED-}
  fi
  if [ "$volume" -ne 0 ]; then
    icon=${ICON_VOLUME-}
  else
    [ -z "$muted" ] && icon=${ICON_NO_SOUND- }
    color=${color8-#555555}
  fi

  text=$(printf '%s %2d%%' "$icon" "$volume")

  if [ "${format-}" = json ] || [ "$interval" = persist ]; then
    json "$text" "$text" "$color"
  else
    echo "$text"
    echo "$text"
    echo "$color"
  fi
}

mixerctl() { amixer -qMD $mixer sset "$scontrol" "$capability" "$@"; }
handle_button() {
  case ${BLOCK_BUTTON-$(echo "$1" | jq .button?)} in
    2) mixerctl toggle ;;
    4) mixerctl 5%+ unmute ;;
    5) mixerctl 5%- unmute ;;
  esac
}

if [ "$interval" != persist ] || [ $mixer != pulse ]; then
  handle_button
  display
  exit
fi

shutdown() {
  # get process gid
  pgid=$(ps -o pgid= $$)
  # kill it in a new process group
  setsid kill -TERM -"${pgid##* }"
  exit 0
}
trap shutdown INT TERM

display
while :; do
  pactl subscribe | while read -r event; do
    case $event in
      *change*) display ;;
    esac
  done; sleep 5
done &

while read -r json; do handle_button "$json"; done
