#!/bin/sh
# uses:
#   acpi (acpi, estimate remaining charge)
set -e

battery=$BLOCK_INSTANCE
if [ -n "$battery" ]; then
  path="/sys/class/power_supply/$battery"
else
  for b in /sys/class/power_supply/B*; do
    path=$b
    break
  done
fi
[ -d "$path" ] || exit 0

display() { printf '%s %s%%' "$1" "$2"; }
displayln() { display "$@"; echo; }

read -r capacity < "$path/capacity"
read -r status   < "$path/status"

case "$status" in
  Charging)
    icon=${ICON_CHARGING-}
    color=${COLOR_CHARGING-${color3-#ffff55}}
    ;;
  Discharging)
    icon=${ICON_DISCHARGING-}
    color=${COLOR_DISCHARGING-${foreground-#ffffff}}
    ;;
  Full|Not\ charging|Unknown)
    icon=${ICON_FULL-}
    color=${COLOR_FULL-${color10-#55ff55}}
    ;;
  # Unknown|*)
  #   icon=${ICON_UNKNOWN-}
  #   color=${COLOR_UNKNOWN-${foreground-#ffffff}}
  #   ;;
esac

[ "${markup-}" = pango ] && icon="<span color='$color'>$icon</span>"

# full_text
display "$icon" "$capacity"
command -v acpi >/dev/null && case "$status" in
  Charging|Discharging) printf ' %s' "$(acpi -b | awk '{print $5}')" ;;
esac
echo

# short_text
displayln "$icon" "$capacity"

# color if under critical threshold
if [ "$status" = Discharging ] && [ "$capacity" -lt "${CRITICAL_THRESHOLD-25}" ]; then
  echo "${COLOR_FG_CRITICAL-${foreground-#ffffff}}"
  echo "${COLOR_BG_CRITICAL-${color1-#ff5555}}"
fi
